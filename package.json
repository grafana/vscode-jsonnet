{
	"name": "vscode-jsonnet",
	"icon": "icon.png",
	"displayName": "Jsonnet Language Server",
	"description": "Full code support (formatting, highlighting, navigation, debugging etc) for Jsonnet",
	"license": "Apache License Version 2.0",
	"publisher": "Grafana",
	"version": "0.6.0-test",
	"repository": {
		"type": "git",
		"url": "https://github.com/grafana/vscode-jsonnet"
	},
	"engines": {
		"vscode": "^1.61.0"
	},
	"categories": [
		"Programming Languages",
		"Linters",
		"Formatters",
		"Debuggers"
	],
	"keywords": [
		"jsonnet",
		"grafana",
		"lsp",
		"language",
		"debugger"
	],
	"activationEvents": [
		"onLanguage:jsonnet"
	],
	"main": "./out/extension",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"command": "jsonnet.evalItem",
					"group": "navigation",
					"when": "false"
				}
			],
			"editor/title": [
				{
					"command": "jsonnet.evalFile",
					"alt": "jsonnet.evalFileYaml",
					"group": "navigation",
					"when": "resourceLangId == jsonnet"
				}
			],
			"editor/title/run": [
				{
					"command": "jsonnet.debugEditorContents",
					"when": "resourceLangId == jsonnet",
					"group": "navigation@1"
				}
			]
		},
		"commands": [
			{
				"command": "jsonnet.evalItem",
				"title": "Jsonnet: Evaluate Item",
				"enablement": "false"
			},
			{
				"command": "jsonnet.evalFile",
				"title": "Jsonnet: Evaluate File",
				"enablement": "resourceLangId == jsonnet",
				"icon": "$(open-preview)"
			},
			{
				"command": "jsonnet.evalFileYaml",
				"title": "Jsonnet: Evaluate File (YAML)",
				"enablement": "resourceLangId == jsonnet",
				"icon": "$(open-preview)"
			},
			{
				"command": "jsonnet.evalExpression",
				"title": "Jsonnet: Evaluate Expression",
				"enablement": "resourceLangId == jsonnet"
			},
			{
				"command": "jsonnet.evalExpressionYaml",
				"title": "Jsonnet: Evaluate Expression (YAML)",
				"enablement": "resourceLangId == jsonnet"
			},
			{
				"command": "jsonnet.restartLanguageServer",
				"title": "Jsonnet: Restart Language Server"
			},
			{
				"command": "jsonnet.debugEditorContents",
				"title": "Jsonnet: Debug File",
				"category": "Jsonnet",
				"enablement": "!inDebugMode",
				"icon": "$(debug-alt)"
			}
		],
		"languages": [
			{
				"id": "jsonnet",
				"aliases": [
					"Jsonnet",
					"jsonnet"
				],
				"extensions": [
					".jsonnet",
					".libsonnet"
				],
				"configuration": "./language/configuration.jsonc"
			}
		],
		"grammars": [
			{
				"language": "jsonnet",
				"scopeName": "source.jsonnet",
				"path": "./language/jsonnet.tmLanguage.json"
			}
		],
		"breakpoints": [
			{
				"language": "jsonnet"
			}
		],
		"debuggers": [
			{
				"type": "jsonnet",
				"languages": [
					"jsonnet"
				],
				"label": "Jsonnet Debugger",
				"configurationAttributes": {
					"launch": {
						"required": [
							"program",
							"jpaths"
						],
						"properties": {
							"program": {
								"type": "string",
								"description": "jsonnet script to run"
							},
							"jpaths": {
								"type": "array",
								"description": "jsonnet search paths",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"initialConfigurations": [],
				"configurationSnippets": [
					{
						"label": "Jsonnet: Debug current file",
						"description": "A new configuration for debugging a Jsonnet file.",
						"body": {
							"type": "jsonnet",
							"request": "launch",
							"name": "Debug current JSONNET file",
							"program": "^\"\\${file}\""
						}
					}
				]
			}
		],
		"configuration": {
			"type": "object",
			"title": "Jsonnet Language Server",
			"properties": {
				"jsonnet.languageServer.releaseRepository": {
					"type": "string",
					"default": "grafana/jsonnet-language-server",
					"description": "Github repository to download the language server from"
				},
				"jsonnet.languageServer.enableAutoUpdate": {
					"scope": "resource",
					"type": "boolean",
					"default": true
				},
				"jsonnet.languageServer.pathToBinary": {
					"scope": "resource",
					"type": "string",
					"description": "Path to language server binary"
				},
				"jsonnet.languageServer.extVars": {
					"scope": "resource",
					"type": "object",
					"default": {},
					"description": "External variables to pass to the language server"
				},
				"jsonnet.languageServer.extCode": {
					"scope": "resource",
					"type": "object",
					"description": "External Jsonnet Code to pass to the language server"
				},
				"jsonnet.languageServer.jpath": {
					"scope": "resource",
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of Jpaths to configure into the lsp"
				},
				"jsonnet.languageServer.tankaMode": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Enable tanka mode. This will use Tanka's code to create a Jsonnet VM. This sets the jpath automatically and allows the resolution of tanka native functions"
				},
				"jsonnet.languageServer.eval": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "If enabled, the LSP will publish eval diagnostics. May produce false positives as the evaluator may not have the full evaluation context. Also, if you work with very large jsonnet projects, you may want to disable this for performance reasons"
				},
				"jsonnet.languageServer.lint": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "If enabled, the LSP will publish linting diagnostics. This may slow down processing of jsonnet evaluation errors (also published as diagnostics)"
				},
				"jsonnet.languageServer.formatting": {
					"scope": "resource",
					"type": "object",
					"description": "Configure the formatting options for the language server. See https://github.com/google/go-jsonnet/blob/master/internal/formatter/jsonnetfmt.go#L55 for field descriptions.",
					"properties": {
						"Indent": {
							"type": "number"
						},
						"MaxBlankLines": {
							"type": "number"
						},
						"StringStyle": {
							"type": "string",
							"enum": [
								"double",
								"single",
								"leave"
							]
						},
						"CommentStyle": {
							"type": "string",
							"enum": [
								"hash",
								"slash",
								"leave"
							]
						},
						"PrettyFieldNames": {
							"type": "boolean"
						},
						"PadArrays": {
							"type": "boolean"
						},
						"PadObjects": {
							"type": "boolean"
						},
						"SortImports": {
							"type": "boolean"
						},
						"UseImplicitPlus": {
							"type": "boolean"
						},
						"StripEverything": {
							"type": "boolean"
						},
						"StripComments": {
							"type": "boolean"
						},
						"StripAllButComments": {
							"type": "boolean"
						}
					}
				},
				"jsonnet.languageServer.logLevel": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"error",
						"warn",
						"info",
						"debug"
					],
					"default": "info",
					"description": "Log level for the language server"
				},
				"jsonnet.debugger.releaseRepository": {
					"type": "string",
					"default": "grafana/jsonnet-debugger",
					"description": "Github repository to download the debugger server from"
				},
				"jsonnet.debugger.enableAutoUpdate": {
					"scope": "resource",
					"type": "boolean",
					"default": true
				},
				"jsonnet.debugger.pathToBinary": {
					"scope": "resource",
					"type": "string",
					"description": "Path to debugger"
				}
			}
		}
	},
	"dependencies": {
		"@types/vscode": "^1.69.0",
		"vscode-languageclient": "^8.0.0",
		"yaml": "^1.10.2"
	},
	"devDependencies": {
		"@types/node": "^12.12.0",
		"@typescript-eslint/eslint-plugin": "^4.23.0",
		"@typescript-eslint/parser": "^4.23.0",
		"eslint": "^7.26.0",
		"typescript": "^4.4.3"
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"lint": "eslint ./src --ext .ts,.tsx"
	}
}
